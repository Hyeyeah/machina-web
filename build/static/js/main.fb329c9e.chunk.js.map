{"version":3,"sources":["assets/loginBack.jpeg","assets/registerBack.jpeg","routes/routes.js","config/colors.js","components/admin/SideBar.jsx","services/logService.js","services/httpService.js","services/authService.js","context/UserContext.js","components/admin/HeadBar.jsx","components/admin/TitleWithIcon.jsx","data/enums.js","services/machineService.js","services/manufucturerService.js","routes/admin/MachineNew.jsx","routes/admin/MachineList.jsx","routes/admin/MachineDetail.jsx","routes/admin/ManufucturerList.jsx","routes/admin/ManufucturerNew.jsx","routes/admin/ManufucturerDetail.jsx","routes/admin/Administration.jsx","routes/admin/Login.jsx","services/userService.js","routes/admin/Register.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Object","freeze","ADMIN","ADMIN_LOGIN","ADMIN_REGISTER","ADMIN_MACHINES","ADMIN_MACHINE_DETAIL","ADMIN_MACHINE_NEW","ADMIN_MANUFUCTURERS","ADMIN_MANUFUCTURER_DETAIL","ADMIN_MANUFUCTURER_NEW","Text","Typography","Sider","Layout","SubMenu","Menu","SideBar","pathname","useHistory","location","trigger","className","style","color","padding","paddingBottom","textAlign","fontSize","colors","opacity","theme","mode","defaultSelectedKeys","defaultOpenKeys","includes","routes","key","title","icon","ControlOutlined","Item","to","ShopOutlined","init","log","error","message","response","data","axios","defaults","baseURL","api","apiUrl","interceptors","use","status","logger","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","getJwt","localStorage","getItem","email","password","a","http","setItem","login","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","UserContext","React","createContext","displayName","Header","confirm","Modal","handleLogout","LogoutOutlined","okText","onOk","authService","window","replace","HeadBar","user","useContext","display","alignItems","justifyContent","type","onClick","backgroundColor","marginLeft","UserOutlined","name","TitleWithIcon","marginTop","marginBottom","categories","getMachines","getMachine","id","createMachine","imageArray","images","forEach","image","push","newData","description","manufucturer","minimumQuantity","options","category","link","saveMachine","Array","isArray","fileList","url","deleteMachine","getManufucturerSelector","apiEndPoint","getManufucturers","getManufucturer","createManufucturer","saveManufucturer","deleteManufucturer","Title","Option","Select","normFile","e","MachineNew","history","useState","manufucturers","setManufucturers","loading","setLoading","useEffect","getManufacturers","ManufucturerService","result","logService","handleSubmit","values","MachineService","success","level","PlusOutlined","size","spinning","width","layout","hideRequiredMark","onFinish","InfoCircleOutlined","gutter","span","label","rules","required","placeholder","map","value","_id","min","TextArea","autoSize","minRows","valuePropName","getValueFromEvent","noStyle","Dragger","action","multiple","InboxOutlined","SubnodeOutlined","List","fields","add","remove","field","index","align","justify","fieldKey","formatter","parser","suffix","Group","block","htmlType","Link","factoryArray","list","item","text","MachineList","state","searchText","searchedColumn","componentDidMount","setState","MachineSerive","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","clearFilters","ref","node","searchInput","onChange","target","onPressEnter","handleSearch","SearchOutlined","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","onFilterDropdownVisibleChange","visible","setTimeout","select","columns","this","sorter","b","length","sortDirections","filters","indexOf","render","dataSource","pagination","pageSize","Component","handleFileList","uid","MachineDetail","edit","setEdit","setData","setfileList","useParams","getData","handleDelete","handlePreview","file","src","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","Image","open","document","write","outerHTML","initialValues","EditOutlined","bordered","maxWidth","option","price","weight","power","material","isSecondhand","listType","onPreview","content","alt","height","objectFit","onConfirm","cancelText","danger","ManufucturerList","address","website","ManufucturerNew","manufucturerService","validateTrigger","MinusCircleOutlined","ManufucturerDetail","contacts","column","contact","Content","Administration","exact","path","component","from","Login","backgroundImage","loginBack","backgroundRepeat","backgroundSize","position","left","right","flexDirection","remember","prefix","MailOutlined","LockOutlined","href","register","getUserDetail","userService","Register","registerBack","dependencies","hasFeedback","getFieldValue","validator","rule","Password","App","auth","Provider","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.fb329c9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loginBack.8f56a0ec.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/registerBack.cc9bf286.jpeg\";","export default Object.freeze({\n  ADMIN: \"/admin\",\n  ADMIN_LOGIN: \"/admin/login\",\n  ADMIN_REGISTER: \"/admin/register\",\n\n  ADMIN_MACHINES: \"/admin/machines\",\n  ADMIN_MACHINE_DETAIL: \"/admin/machines/:id\",\n  ADMIN_MACHINE_NEW: \"/admin/newMachine\",\n\n  ADMIN_MANUFUCTURERS: \"/admin/manufucturers\",\n  ADMIN_MANUFUCTURER_DETAIL: \"/admin/manufucturers/:id\",\n  ADMIN_MANUFUCTURER_NEW: \"/admin/newManufucturer\",\n});\n","export default {\n  primary: \"#fa8c16\",\n  secondary: \"#bae637\",\n  white: \"white\",\n  dark: \"#0c0c0c\",\n  medium: \"#6e6969\",\n  medium_primary: \"#DFEEF4\",\n  medium_secondary: \"#FFF4D9\",\n  light_primary: \"#F0F4F6\",\n  light_secondary: \"#FCF9F2\",\n  danger: \"tomato\",\n  done: \"#4CAF50\",\n};\n","import React from \"react\";\nimport { Layout, Menu, Typography } from \"antd\";\nimport { ControlOutlined, ShopOutlined } from \"@ant-design/icons\";\nimport { NavLink, useHistory } from \"react-router-dom\";\n\nimport routes from \"../../routes/routes\";\nimport colors from \"../../config/colors\";\n\nconst { Text } = Typography;\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nfunction SideBar() {\n  const history = useHistory();\n  const { pathname } = history.location;\n\n  return (\n    <Sider trigger={null}>\n      <div\n        className=\"logo\"\n        style={{\n          color: \"white\",\n          padding: 10,\n          paddingBottom: 0,\n          textAlign: \"center\",\n        }}\n      >\n        <Text style={{ fontSize: \"1.2em\", color: colors.white }}>\n          Machinery\n        </Text>\n        <p style={{ fontSize: \"0.9em\", opacity: 0.7 }}>Administration</p>\n      </div>\n\n      <Menu\n        theme=\"dark\"\n        mode=\"inline\"\n        defaultSelectedKeys={pathname}\n        defaultOpenKeys={\n          pathname.includes(routes.ADMIN_MACHINE_NEW) ||\n          pathname.includes(routes.ADMIN_MACHINES)\n            ? [\"machine\"]\n            : pathname.includes(routes.ADMIN_MANUFUCTURER_NEW) ||\n              pathname.includes(routes.ADMIN_MANUFUCTURERS)\n            ? [\"manufucturer\"]\n            : [\"machine\", \"manufucturer\"]\n        }\n      >\n        <SubMenu key=\"machine\" title=\"Machine\" icon={<ControlOutlined />}>\n          <Menu.Item key={routes.ADMIN_MACHINES}>\n            <NavLink to={routes.ADMIN_MACHINES}>Machines</NavLink>\n          </Menu.Item>\n\n          <Menu.Item key={routes.ADMIN_MACHINE_NEW}>\n            <NavLink to={routes.ADMIN_MACHINE_NEW}>Add machine</NavLink>\n          </Menu.Item>\n        </SubMenu>\n\n        <SubMenu\n          key=\"manufucturer\"\n          title=\"Manufucturer\"\n          icon={<ShopOutlined />}\n        >\n          <Menu.Item key={routes.ADMIN_MANUFUCTURERS}>\n            <NavLink to={routes.ADMIN_MANUFUCTURERS}>Manufucturers</NavLink>\n          </Menu.Item>\n\n          <Menu.Item key={routes.ADMIN_MANUFUCTURER_NEW}>\n            <NavLink to={routes.ADMIN_MANUFUCTURER_NEW}>\n              Add manufucturer\n            </NavLink>\n          </Menu.Item>\n        </SubMenu>\n      </Menu>\n    </Sider>\n  );\n}\n\nexport default SideBar;\n","import { message } from \"antd\";\n\nfunction init() { }\n\nfunction log(error) {\n  message.error(error.response.data);\n}\n\nexport default {\n  init,\n  log,\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { message } from \"antd\";\nimport api from '../config.json'\n\n// axios.defaults.baseURL = process.env.REACT_APP_API_URL;\n// axios.defaults.baseURL = \"http://172.105.217.250:3900/api\";\naxios.defaults.baseURL = api.apiUrl\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    message.error(\"An unexpected error occurred.\");\n  }\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndPoint = \"/auth\";\n\nhttp.setJwt(getJwt());\n\nexport function getJwt() {\n  return localStorage.getItem(\"token\");\n}\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndPoint, { email, password });\n  localStorage.setItem(\"token\", jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(\"token\", jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(\"token\");\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(\"token\");\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport default {\n  login,\n  logout,\n  getCurrentUser,\n  loginWithJwt,\n  getJwt,\n};\n","import React from \"react\";\n\nconst UserContext = React.createContext();\nUserContext.displayName = \"UserContext\";\n\nexport default UserContext;\n","import React, { useContext } from \"react\";\nimport { Layout, Avatar, Modal, Button } from \"antd\";\nimport Text from \"antd/lib/typography/Text\";\nimport colors from \"../../config/colors\";\nimport { LogoutOutlined, UserOutlined } from \"@ant-design/icons\";\nimport authService from \"../../services/authService\";\nimport routes from \"../../routes/routes\";\nimport UserContext from \"../../context/UserContext\";\n\nconst { Header } = Layout;\nconst { confirm } = Modal;\n\nconst handleLogout = () => {\n  confirm({\n    title: \"Would you like to log out?\",\n    icon: <LogoutOutlined />,\n    okText: \"Logout\",\n    onOk() {\n      authService.logout();\n      window.location.replace(routes.ADMIN_LOGIN);\n    },\n  });\n};\n\nfunction HeadBar() {\n  const { user } = useContext(UserContext);\n\n  return (\n    <Header\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n      }}\n    >\n      <Button type=\"text\" onClick={handleLogout}>\n        <LogoutOutlined />\n        Logout\n      </Button>\n\n      <Avatar\n        style={{ backgroundColor: colors.primary, marginLeft: 15 }}\n        icon={<UserOutlined />}\n      />\n      <Text\n        style={{\n          color: colors.white,\n          marginLeft: 10,\n          opacity: 0.7,\n        }}\n      >\n        {user && user.name}\n      </Text>\n    </Header>\n  );\n}\n\nexport default HeadBar;\n","import React from \"react\";\nimport { Row, Typography, Space } from \"antd\";\nimport colors from \"../../config/colors\";\n\nconst { Text } = Typography;\n\nfunction TitleWithIcon({ icon, title, marginTop = 40 }) {\n  return (\n    <Row style={{ marginTop, marginBottom: 20 }}>\n      <Text style={{ color: colors.primary, fontSize: \"1.2em\" }}>\n        <Space>\n          {icon}\n          {title}\n        </Space>\n      </Text>\n    </Row>\n  );\n}\n\nexport default TitleWithIcon;\n","export const categories = [\n  \"Construction\",\n  \"Agriculture and Farming\",\n  \"Mining\",\n  \"Fishig\",\n  \"Packaging and Processing\",\n  \"Manufucturing\",\n  \"Accessories\",\n];\n","import http from \"./httpService\";\n\nconst apiEndPoint = \"/machines\";\n\nexport function getMachines() {\n  return http.get(apiEndPoint);\n}\n\nexport function getMachine(id) {\n  return http.get(`${apiEndPoint}/${id}`);\n}\n\nexport function createMachine(data) {\n  let imageArray = [];\n  data.images.forEach((image) => imageArray.push(image.response));\n\n  const newData = {\n    title: data.title,\n    description: data.description,\n    manufucturer: data.manufucturer,\n    minimumQuantity: data.minimumQuantity,\n    options: data.options,\n    category: data.category,\n    link: data.link,\n    images: imageArray,\n  };\n\n  return http.post(apiEndPoint, newData);\n}\n\nexport function saveMachine(data, id) {\n  let imageArray = [];\n\n  if (Array.isArray(data.images)) imageArray = [...data.images];\n  else\n    data.images.fileList.forEach((image) => {\n      image.url ? imageArray.push(image.url) : imageArray.push(image.response);\n    });\n\n  const newData = {\n    title: data.title,\n    description: data.description,\n    manufucturer: data.manufucturer,\n    minimumQuantity: data.minimumQuantity,\n    options: data.options,\n    category: data.category,\n    link: data.link,\n    images: imageArray,\n  };\n\n  return http.put(`${apiEndPoint}/${id}`, newData);\n}\n\nexport function deleteMachine(id) {\n  return http.delete(`${apiEndPoint}/${id}`);\n}\n\nexport default {\n  getMachines,\n  getMachine,\n  createMachine,\n  saveMachine,\n  deleteMachine,\n};\n","import http from \"./httpService\";\n\nconst apiEndPoint = \"/manufucturers\";\n\nexport function getManufucturerSelector() {\n  return http.get(apiEndPoint + \"/selector/\");\n}\n\nexport function getManufucturers() {\n  return http.get(apiEndPoint);\n}\n\nexport function getManufucturer(id) {\n  return http.get(`${apiEndPoint}/${id}`);\n}\n\nexport function createManufucturer(data) {\n  return http.post(apiEndPoint, data);\n}\n\nexport function saveManufucturer(data, id) {\n  return http.put(`${apiEndPoint}/${id}`, data);\n}\n\nexport function deleteManufucturer(id) {\n  return http.delete(`${apiEndPoint}/${id}`);\n}\n\nexport default {\n  getManufucturerSelector,\n  getManufucturers,\n  getManufucturer,\n  createManufucturer,\n  saveManufucturer,\n  deleteManufucturer,\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Typography,\n  Space,\n  Row,\n  Col,\n  Input,\n  Form,\n  Select,\n  Button,\n  Upload,\n  Radio,\n  message,\n  Spin,\n  InputNumber,\n} from \"antd\";\nimport {\n  PlusOutlined,\n  InfoCircleOutlined,\n  SubnodeOutlined,\n  InboxOutlined,\n} from \"@ant-design/icons\";\nimport TitleWithIcon from \"../../components/admin/TitleWithIcon\";\nimport { categories } from \"../../data/enums\";\nimport colors from \"../../config/colors\";\nimport { useHistory } from \"react-router-dom\";\nimport MachineService from \"../../services/machineService\";\nimport routes from \"../routes\";\nimport ManufucturerService from \"../../services/manufucturerService\";\nimport logService from \"../../services/logService\";\nimport api from \"../../config.json\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst normFile = (e) => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e && e.fileList;\n};\n\nfunction MachineNew() {\n  const history = useHistory();\n  const [manufucturers, setManufucturers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getManufacturers();\n  }, []);\n\n  const getManufacturers = async () => {\n    setLoading(true);\n    try {\n      const result = await ManufucturerService.getManufucturerSelector();\n      if (result) setManufucturers(result.data);\n      setLoading(false);\n    } catch (ex) {\n      logService.log(ex);\n    }\n  };\n\n  const handleSubmit = async (values) => {\n    setLoading(true);\n    try {\n      await MachineService.createMachine(values);\n      message.success(`${values.title} has been created successfully.`);\n      history.push(routes.ADMIN_MACHINES);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400)\n        message.error(ex.response.data);\n    }\n    setLoading(false);\n  };\n  return (\n    <div style={{ padding: 40 }}>\n      <Title level={3}>\n        <Space>\n          <PlusOutlined />\n          Add new machine\n        </Space>\n      </Title>\n      <Spin size=\"large\" spinning={loading}>\n        <Form\n          style={{ width: \"60%\" }}\n          name=\"dynamic_form_nest_item\"\n          layout=\"vertical\"\n          hideRequiredMark\n          onFinish={handleSubmit}\n        >\n          <TitleWithIcon title=\"Machine\" icon={<InfoCircleOutlined />} />\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"title\"\n                label=\"Title\"\n                rules={[{ required: true, message: \"Please enter title\" }]}\n              >\n                <Input placeholder=\"Please enter title\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"category\"\n                label=\"Category\"\n                rules={[{ required: true, message: \"Please select category\" }]}\n              >\n                <Select placeholder=\"Please select category\">\n                  {categories &&\n                    categories.map((category) => (\n                      <Option key={category} value={category}>\n                        {category}\n                      </Option>\n                    ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"manufucturer\"\n                label=\"Manufucturer\"\n                rules={[\n                  { required: true, message: \"Please select manufucturer\" },\n                ]}\n              >\n                <Select placeholder=\"Please select manufucturer\">\n                  {manufucturers &&\n                    manufucturers.map((manufucturer) => (\n                      <Option key={manufucturer._id} value={manufucturer._id}>\n                        {manufucturer.name}\n                      </Option>\n                    ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"link\"\n                label=\"Link\"\n                rules={[{ required: true, message: \"Please select link\" }]}\n              >\n                <Input placeholder=\"Please enter link\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"minimumQuantity\"\n                label=\"Minimum quantity\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter minimum quantity\",\n                  },\n                  {\n                    type: \"number\",\n                    min: 0,\n                    message: \"Please enter number\",\n                  },\n                ]}\n              >\n                <InputNumber\n                  style={{ width: \"100%\" }}\n                  placeholder=\"Please enter minimum quantity\"\n                  min={0}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"description\"\n                label=\"Description\"\n                rules={[\n                  { required: true, message: \"Please select description\" },\n                ]}\n              >\n                <Input.TextArea\n                  autoSize={{ minRows: 5 }}\n                  placeholder=\"Please enter description\"\n                />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item label=\"Images\">\n                <Form.Item\n                  name=\"images\"\n                  valuePropName=\"fileList\"\n                  getValueFromEvent={normFile}\n                  noStyle\n                  rules={[{ required: true, message: \"Please upload image\" }]}\n                >\n                  <Upload.Dragger\n                    name=\"images\"\n                    action={api.apiUrl + \"/images\"}\n                    multiple\n                  >\n                    <p className=\"ant-upload-drag-icon\">\n                      <InboxOutlined />\n                    </p>\n                    <p>Click or drag photo to this area to upload</p>\n                  </Upload.Dragger>\n                </Form.Item>\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <TitleWithIcon title=\"Options\" icon={<SubnodeOutlined />} />\n          <Form.List name=\"options\">\n            {(fields, { add, remove }) => {\n              return (\n                <div>\n                  {fields.map((field, index) => (\n                    <div key={field.key} style={{ marginBottom: 20 }}>\n                      <Row\n                        style={{ marginBottom: 15 }}\n                        align=\"middle\"\n                        justify=\"space-between\"\n                      >\n                        <Text style={{ color: colors.white }}>\n                          Option {index + 1}\n                        </Text>\n                        <Button\n                          type=\"link\"\n                          onClick={() => {\n                            remove(field.name);\n                          }}\n                        >\n                          Remove\n                        </Button>\n                      </Row>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"name\"]}\n                            fieldKey={[field.fieldKey, \"name\"]}\n                            label=\"Name\"\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please enter name\",\n                              },\n                            ]}\n                          >\n                            <Input placeholder=\"Please enter name\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"price\"]}\n                            fieldKey={[field.fieldKey, \"price\"]}\n                            label=\"Price\"\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please enter price\",\n                              },\n                              {\n                                type: \"number\",\n                                min: 0,\n                                message: \"Please enter price\",\n                              },\n                            ]}\n                          >\n                            <InputNumber\n                              style={{ width: \"100%\" }}\n                              formatter={(value) =>\n                                `$ ${value}`.replace(\n                                  /\\B(?=(\\d{3})+(?!\\d))/g,\n                                  \",\"\n                                )\n                              }\n                              parser={(value) =>\n                                value.replace(/\\$\\s?|(,*)/g, \"\")\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"weight\"]}\n                            fieldKey={[field.fieldKey, \"weight\"]}\n                            label=\"Weight\"\n                          >\n                            <Input\n                              suffix=\"kg\"\n                              placeholder=\"Please enter weight\"\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"power\"]}\n                            fieldKey={[field.fieldKey, \"power\"]}\n                            label=\"Power\"\n                          >\n                            <Input\n                              suffix=\"watts\"\n                              placeholder=\"Please enter power\"\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"material\"]}\n                            fieldKey={[field.fieldKey, \"material\"]}\n                            label=\"Material\"\n                          >\n                            <Input placeholder=\"Please enter material\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"warranty\"]}\n                            fieldKey={[field.fieldKey, \"warranty\"]}\n                            label=\"Warranty\"\n                          >\n                            <Input\n                              placeholder=\"Please enter warranty\"\n                              suffix=\"years\"\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"isSecondHand\"]}\n                            fieldKey={[field.fieldKey, \"isSecondHand\"]}\n                            label=\"Is this a second hand machine?\"\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please choose one\",\n                              },\n                            ]}\n                          >\n                            <Radio.Group>\n                              <Radio value={true}>Yes</Radio>\n                              <Radio value={false}>No</Radio>\n                            </Radio.Group>\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </div>\n                  ))}\n\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => {\n                        add();\n                      }}\n                      block\n                    >\n                      <PlusOutlined /> Add option\n                    </Button>\n                  </Form.Item>\n                </div>\n              );\n            }}\n          </Form.List>\n\n          <Row justify=\"end\">\n            <Button\n              type=\"primary\"\n              style={{ marginTop: 50 }}\n              htmlType=\"submit\"\n              size=\"large\"\n            >\n              Save machine\n            </Button>\n          </Row>\n        </Form>\n      </Spin>\n    </div>\n  );\n}\n\nexport default MachineNew;\n","import React, { Component } from \"react\";\nimport { Table, Input, Button, Space, Typography } from \"antd\";\nimport { SearchOutlined, ControlOutlined } from \"@ant-design/icons\";\nimport colors from \"../../config/colors\";\nimport { categories } from \"../../data/enums\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../routes\";\nimport MachineSerive from \"../../services/machineService\";\nimport logService from \"../../services/logService\";\n\nconst { Link, Title } = Typography;\n\nconst factoryArray = (list) => {\n  let result = [];\n\n  list.forEach((item) => {\n    result.push({ text: item, value: item });\n  });\n\n  return result;\n};\n\nclass MachineList extends Component {\n  state = {\n    searchText: \"\",\n    searchedColumn: \"\",\n    loading: false,\n    data: [],\n  };\n\n  componentDidMount = async () => {\n    this.setState({ loading: true });\n    try {\n      const result = await MachineSerive.getMachines();\n      if (result) this.setState({ data: result.data, loading: false });\n    } catch (ex) {\n      logService.log(ex);\n    }\n  };\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={\n            Array.isArray(dataIndex)\n              ? `Search ${dataIndex[0]}`\n              : `Search ${dataIndex}`\n          }\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        style={{ color: filtered ? colors.secondary : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      Array.isArray(dataIndex)\n        ? record[dataIndex[0]][dataIndex[1]]\n          ? record[dataIndex[0]][dataIndex[1]]\n              .toString()\n              .toLowerCase()\n              .includes(value.toLowerCase())\n          : \"\"\n        : record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  render() {\n    const columns = [\n      {\n        title: \"Title\",\n        dataIndex: \"title\",\n        key: \"title\",\n        ...this.getColumnSearchProps(\"title\"),\n        sorter: (a, b) => a.title.length - b.title.length,\n        sortDirections: [\"descend\", \"ascend\"],\n      },\n      {\n        title: \"Manufucturer\",\n        dataIndex: [\"manufucturer\", \"name\"],\n        key: \"manufucturer\",\n        ...this.getColumnSearchProps([\"manufucturer\", \"name\"]),\n        sorter: (a, b) =>\n          a.manufucturer.name.length - b.manufucturer.name.length,\n        sortDirections: [\"descend\", \"ascend\"],\n      },\n      {\n        title: \"Category\",\n        dataIndex: \"category\",\n        key: \"category\",\n        filters: factoryArray(categories),\n        onFilter: (value, record) => record.category.indexOf(value) === 0,\n        sorter: (a, b) => a.category.length - b.category.length,\n        sortDirections: [\"descend\", \"ascend\"],\n      },\n      {\n        title: \"Number of options\",\n        dataIndex: \"options\",\n        key: \"options\",\n\n        sorter: (a, b) => a.options.length - b.options.length,\n        sortDirections: [\"descend\", \"ascend\"],\n        render: (text, record) => record.options.length,\n      },\n      {\n        title: \"View\",\n        key: \"view\",\n\n        render: (text, record) => (\n          <NavLink to={`${routes.ADMIN_MACHINES}/${record._id}`}>\n            <Link>View</Link>\n          </NavLink>\n        ),\n      },\n    ];\n\n    const { data, loading } = this.state;\n\n    return (\n      <div style={{ padding: 40 }}>\n        <Title level={3} style={{ marginBottom: 30 }}>\n          <Space>\n            <ControlOutlined /> Machines\n          </Space>\n        </Title>\n\n        <Table\n          dataSource={data}\n          columns={columns}\n          pagination={{ pageSize: 8 }}\n          loading={loading}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MachineList;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Descriptions,\n  Space,\n  Typography,\n  Row,\n  Button,\n  Form,\n  Col,\n  Input,\n  Popconfirm,\n  Radio,\n  Popover,\n  Select,\n  Upload,\n  message,\n  Spin,\n  InputNumber,\n} from \"antd\";\nimport {\n  ControlOutlined,\n  EditOutlined,\n  PlusOutlined,\n  InfoCircleOutlined,\n} from \"@ant-design/icons\";\nimport TitleWithIcon from \"../../components/admin/TitleWithIcon\";\nimport colors from \"../../config/colors\";\nimport { categories } from \"../../data/enums\";\nimport MachineService from \"../../services/machineService\";\nimport logService from \"../../services/logService\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport routes from \"../routes\";\nimport ManufucturerService from \"../../services/manufucturerService\";\nimport api from \"../../config.json\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst handleFileList = (images) => {\n  let fileList = [];\n\n  images.forEach((image, index) => {\n    fileList.push({\n      uid: `${-1 * (index + 1)}`,\n      name: `image${index + 1}.png`,\n      status: \"done\",\n      url: image,\n    });\n  });\n\n  return fileList;\n};\n\nfunction MachineDetail() {\n  const [edit, setEdit] = useState(false);\n  const [data, setData] = useState();\n  const [fileList, setfileList] = useState();\n  const [loading, setLoading] = useState(false);\n  const [manufucturers, setManufucturers] = useState([]);\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  useEffect(() => {\n    getData();\n    getManufacturers();\n  }, []);\n\n  const getData = async () => {\n    setLoading(true);\n    try {\n      const result = await MachineService.getMachine(id);\n      if (result) {\n        setData(result.data);\n        setLoading(false);\n        setfileList(handleFileList(result.data.images));\n      }\n    } catch (ex) {\n      logService.log(ex);\n    }\n  };\n\n  const getManufacturers = async () => {\n    setLoading(true);\n    try {\n      const result = await ManufucturerService.getManufucturerSelector();\n      if (result) setManufucturers(result.data);\n      setLoading(false);\n    } catch (ex) {\n      logService.log(ex);\n    }\n  };\n\n  const handleSubmit = async (values) => {\n    setLoading(true);\n    try {\n      const result = await MachineService.saveMachine(values, id);\n      if (result) {\n        setData(result.data);\n        setEdit(false);\n      }\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400)\n        message.error(ex.response.data);\n    }\n    setLoading(false);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await MachineService.deleteMachine(id);\n      history.push(routes.ADMIN_MACHINES);\n    } catch (ex) {\n      logService.log(ex);\n    }\n  };\n\n  const handleChangeImage = ({ fileList }) => setfileList(fileList);\n\n  const handlePreview = async (file) => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  return (\n    <div style={{ padding: 40 }}>\n      <Spin size=\"large\" spinning={loading}>\n        {data && (\n          <Form\n            name=\"dynamic_form_item\"\n            layout=\"vertical\"\n            hideRequiredMark\n            initialValues={{\n              title: data.title,\n              description: data.description,\n              images: data.images,\n              link: data.link,\n              category: data.category,\n              manufucturer: data.manufucturer._id,\n              minimumQuantity: data.minimumQuantity,\n              options: data.options,\n            }}\n            onFinish={handleSubmit}\n          >\n            <Row justify=\"space-between\">\n              <Title level={3} style={{ marginBottom: 30 }}>\n                <Space>\n                  <ControlOutlined />\n                  {data.title}\n                </Space>\n              </Title>\n              {edit ? (\n                <Row justify=\"end\">\n                  <Space>\n                    <Form.Item noStyle style={{ display: \"block\" }}>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Save changes\n                      </Button>\n                    </Form.Item>\n                    <Button onClick={() => setEdit(false)}>Cancel</Button>\n                  </Space>\n                </Row>\n              ) : (\n                <Button htmlType=\"button\" onClick={() => setEdit(true)}>\n                  <EditOutlined /> Edit machine\n                </Button>\n              )}\n            </Row>\n            <TitleWithIcon\n              title=\"Machine\"\n              icon={<InfoCircleOutlined />}\n              marginTop={0}\n            />\n            <Descriptions layout=\"vertical\" bordered>\n              <Descriptions.Item label=\"Title\">\n                {edit ? (\n                  <Form.Item\n                    name=\"title\"\n                    rules={[{ required: true, message: \"Please enter title\" }]}\n                    noStyle\n                  >\n                    <Input />\n                  </Form.Item>\n                ) : (\n                  data.title\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Manufucturer\">\n                {edit ? (\n                  <Form.Item name=\"manufucturer\" noStyle>\n                    <Select style={{ width: \"100%\" }}>\n                      {manufucturers &&\n                        manufucturers.map((manufucturer) => (\n                          <Option\n                            key={manufucturer._id}\n                            value={manufucturer._id}\n                          >\n                            {manufucturer.name}\n                          </Option>\n                        ))}\n                    </Select>\n                  </Form.Item>\n                ) : (\n                  data.manufucturer.name\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Category\">\n                {edit ? (\n                  <Form.Item name=\"category\" noStyle>\n                    <Select style={{ width: \"100%\" }}>\n                      {categories &&\n                        categories.map((category) => (\n                          <Option key={category} value={category}>\n                            {category}\n                          </Option>\n                        ))}\n                    </Select>\n                  </Form.Item>\n                ) : (\n                  data.category\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Link\">\n                {edit ? (\n                  <Form.Item\n                    name=\"link\"\n                    rules={[{ required: true, message: \"Please enter link\" }]}\n                    noStyle\n                  >\n                    <Input />\n                  </Form.Item>\n                ) : (\n                  data.link\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Minimum quantity\">\n                {edit ? (\n                  <Form.Item\n                    name=\"minimumQuantity\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please enter minimum quantity\",\n                      },\n                    ]}\n                    noStyle\n                  >\n                    <Input />\n                  </Form.Item>\n                ) : (\n                  data.minimumQuantity\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Description\" style={{ maxWidth: 300 }}>\n                {edit ? (\n                  <Form.Item\n                    name=\"description\"\n                    rules={[\n                      { required: true, message: \"Please enter description\" },\n                    ]}\n                    noStyle\n                  >\n                    <Input.TextArea autoSize />\n                  </Form.Item>\n                ) : (\n                  data.description\n                )}\n              </Descriptions.Item>\n\n              <Descriptions.Item label=\"Options\" span={3}>\n                {edit ? (\n                  <Form.List name=\"options\">\n                    {(fields, { add, remove }) => {\n                      return (\n                        <div style={{ padding: 30 }}>\n                          {fields.map((field, index) => (\n                            <div key={field.key} style={{ paddingBottom: 30 }}>\n                              <Row\n                                style={{ marginBottom: 15 }}\n                                align=\"middle\"\n                                justify=\"space-between\"\n                              >\n                                <Text style={{ color: colors.primary }}>\n                                  Option {index + 1}\n                                </Text>\n                                <Button\n                                  type=\"link\"\n                                  onClick={() => {\n                                    remove(field.name);\n                                  }}\n                                >\n                                  Remove\n                                </Button>\n                              </Row>\n\n                              <Descriptions bordered style={{ marginTop: 20 }}>\n                                <Descriptions.Item label=\"Name\">\n                                  <Form.Item\n                                    {...field}\n                                    name={[field.name, \"name\"]}\n                                    fieldKey={[field.fieldKey, \"name\"]}\n                                    rules={[\n                                      {\n                                        required: true,\n                                        message: \"Please enter name\",\n                                      },\n                                    ]}\n                                    noStyle\n                                  >\n                                    <Input />\n                                  </Form.Item>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"Price\">\n                                  <Form.Item\n                                    {...field}\n                                    name={[field.name, \"price\"]}\n                                    fieldKey={[field.fieldKey, \"price\"]}\n                                    rules={[\n                                      {\n                                        required: true,\n                                        message: \"Please enter price\",\n                                      },\n                                    ]}\n                                    noStyle\n                                  >\n                                    <InputNumber\n                                      formatter={(value) =>\n                                        `$ ${value}`.replace(\n                                          /\\B(?=(\\d{3})+(?!\\d))/g,\n                                          \",\"\n                                        )\n                                      }\n                                      parser={(value) =>\n                                        value.replace(/\\$\\s?|(,*)/g, \"\")\n                                      }\n                                      style={{ width: \"100%\" }}\n                                    />\n                                  </Form.Item>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"Weight\">\n                                  <Form.Item\n                                    {...field}\n                                    name={[field.name, \"weight\"]}\n                                    fieldKey={[field.fieldKey, \"weight\"]}\n                                    noStyle\n                                  >\n                                    <Input suffix=\"kg\" />\n                                  </Form.Item>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"Power\">\n                                  <Form.Item\n                                    {...field}\n                                    name={[field.name, \"power\"]}\n                                    fieldKey={[field.fieldKey, \"power\"]}\n                                    noStyle\n                                  >\n                                    <Input suffix=\"watts\" />\n                                  </Form.Item>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"Material\">\n                                  <Form.Item\n                                    {...field}\n                                    name={[field.name, \"material\"]}\n                                    fieldKey={[field.fieldKey, \"material\"]}\n                                    noStyle\n                                  >\n                                    <Input />\n                                  </Form.Item>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"Warranty\">\n                                  <Form.Item\n                                    {...field}\n                                    name={[field.name, \"warranty\"]}\n                                    fieldKey={[field.fieldKey, \"warranty\"]}\n                                    noStyle\n                                  >\n                                    <Input suffix=\"years\" />\n                                  </Form.Item>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"Is this a second hand machine?\">\n                                  <Form.Item\n                                    {...field}\n                                    name={[field.name, \"isSecondHand\"]}\n                                    fieldKey={[field.fieldKey, \"isSecondHand\"]}\n                                    rules={[\n                                      {\n                                        required: true,\n                                        message: \"Please choose one\",\n                                      },\n                                    ]}\n                                    noStyle\n                                  >\n                                    <Radio.Group>\n                                      <Radio value={true}>Yes</Radio>\n                                      <Radio value={false}>No</Radio>\n                                    </Radio.Group>\n                                  </Form.Item>\n                                </Descriptions.Item>\n                              </Descriptions>\n                            </div>\n                          ))}\n\n                          <Form.Item>\n                            <Button\n                              type=\"dashed\"\n                              onClick={() => {\n                                add();\n                              }}\n                              block\n                            >\n                              <PlusOutlined /> Add option\n                            </Button>\n                          </Form.Item>\n                        </div>\n                      );\n                    }}\n                  </Form.List>\n                ) : (\n                  data.options &&\n                  data.options.map((option) => (\n                    <div key={option.name} style={{ padding: 30 }}>\n                      <Text style={{ color: colors.primary }}>\n                        Option {data.options.indexOf(option) + 1}\n                      </Text>\n\n                      <Descriptions bordered style={{ marginTop: 20 }}>\n                        <Descriptions.Item label=\"Name\">\n                          {option.name}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Price\">\n                          {`$ ${option.price}`.replace(\n                            /\\B(?=(\\d{3})+(?!\\d))/g,\n                            \",\"\n                          )}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Weight\">\n                          {`${option.weight} kg`}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Power\">\n                          {`${option.power} watts`}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Material\">\n                          {option.material}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Warranty\">\n                          {`${option.power} ${\n                            option.power <= 1 ? \"year\" : \"years\"\n                          }`}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Second hand\">\n                          {option.isSecondhand && option.isSecondhand === true\n                            ? \"Yes\"\n                            : \"No\"}\n                        </Descriptions.Item>\n                      </Descriptions>\n                    </div>\n                  ))\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Images\" span={3}>\n                <Row gutter=\"16\">\n                  {edit ? (\n                    <Form.Item name=\"images\" noStyle>\n                      <Upload\n                        name=\"images\"\n                        action={api.apiUrl + \"/images\"}\n                        listType=\"picture-card\"\n                        fileList={fileList}\n                        onChange={handleChangeImage}\n                        onPreview={handlePreview}\n                      >\n                        {fileList.length >= 20 ? null : (\n                          <div>\n                            <PlusOutlined />\n                            <div className=\"ant-upload-text\">Upload</div>\n                          </div>\n                        )}\n                      </Upload>\n                    </Form.Item>\n                  ) : (\n                    data.images &&\n                    data.images.map((image) => (\n                      <Col style={{ marginBottom: 16 }}>\n                        <Popover\n                          content={\n                            <img\n                              src={image}\n                              alt={data.title}\n                              style={{\n                                width: 500,\n                                height: 300,\n                                objectFit: \"cover\",\n                              }}\n                            />\n                          }\n                        >\n                          <img\n                            key={image}\n                            src={image}\n                            alt={data.title}\n                            style={{\n                              width: 100,\n                              height: 100,\n                              objectFit: \"cover\",\n                            }}\n                          />\n                        </Popover>\n                      </Col>\n                    ))\n                  )}\n                </Row>\n              </Descriptions.Item>\n            </Descriptions>\n            {edit && (\n              <Row style={{ marginTop: 20 }} justify=\"end\">\n                <Popconfirm\n                  title=\"Are you sure delete this machine?\"\n                  onConfirm={handleDelete}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Button danger>Delete</Button>\n                </Popconfirm>\n              </Row>\n            )}\n          </Form>\n        )}\n      </Spin>\n    </div>\n  );\n}\n\nexport default MachineDetail;\n","import React, { Component } from \"react\";\nimport { Table, Input, Button, Space, Typography } from \"antd\";\nimport { SearchOutlined, ShopOutlined } from \"@ant-design/icons\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../routes\";\nimport ManufucturerService from \"../../services/manufucturerService\";\nimport logService from \"../../services/logService\";\nimport colors from \"../../config/colors\";\n\nconst { Link, Title } = Typography;\n\nclass ManufucturerList extends Component {\n  state = {\n    searchText: \"\",\n    searchedColumn: \"\",\n    loading: false,\n    data: [],\n  };\n\n  componentDidMount = async () => {\n    this.setState({ loading: true });\n    try {\n      const { data } = await ManufucturerService.getManufucturers();\n      this.setState({ data, loading: false });\n    } catch (ex) {\n      logService.log(ex);\n    }\n  };\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        style={{ color: filtered ? colors.secondary : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  render() {\n    const columns = [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\",\n        ...this.getColumnSearchProps(\"name\"),\n        sorter: (a, b) => a.name.length - b.name.length,\n        sortDirections: [\"descend\", \"ascend\"],\n      },\n      {\n        title: \"Address\",\n        dataIndex: \"address\",\n        key: \"address\",\n        ...this.getColumnSearchProps(\"address\"),\n        sorter: (a, b) => a.address.length - b.address.length,\n        sortDirections: [\"descend\", \"ascend\"],\n      },\n      {\n        title: \"Website\",\n        dataIndex: \"website\",\n        key: \"website\",\n        ...this.getColumnSearchProps(\"website\"),\n        sorter: (a, b) => a.website.length - b.website.length,\n        sortDirections: [\"descend\", \"ascend\"],\n      },\n      {\n        title: \"View\",\n        key: \"view\",\n\n        render: (text, record) => (\n          <NavLink to={`${routes.ADMIN_MANUFUCTURERS}/${record._id}`}>\n            <Link>View</Link>\n          </NavLink>\n        ),\n      },\n    ];\n\n    const { data, loading } = this.state;\n\n    return (\n      <div style={{ padding: 40 }}>\n        <Title level={3} style={{ marginBottom: 30 }}>\n          <Space>\n            <ShopOutlined /> Manufucturers\n          </Space>\n        </Title>\n\n        <Table\n          dataSource={data}\n          columns={columns}\n          pagination={{ pageSize: 8 }}\n          loading={loading}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ManufucturerList;\n","import React, { useState } from \"react\";\nimport {\n  Typography,\n  Space,\n  Row,\n  Col,\n  Input,\n  Form,\n  Button,\n  message,\n  Spin,\n} from \"antd\";\nimport {\n  PlusOutlined,\n  InfoCircleOutlined,\n  MinusCircleOutlined,\n} from \"@ant-design/icons\";\nimport TitleWithIcon from \"../../components/admin/TitleWithIcon\";\nimport colors from \"../../config/colors\";\nimport manufucturerService from \"../../services/manufucturerService\";\nimport routes from \"../routes\";\nimport { useHistory } from \"react-router-dom\";\n\nconst { Text, Title } = Typography;\n\nfunction ManufucturerNew() {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (values) => {\n    setLoading(true);\n    try {\n      await manufucturerService.createManufucturer(values);\n      message.success(`${values.name} has been created successfully.`);\n      history.push(routes.ADMIN_MANUFUCTURERS);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400)\n        message.error(ex.response.data);\n    }\n    setLoading(false);\n  };\n  return (\n    <div style={{ padding: 40 }}>\n      <Title level={3}>\n        <Space>\n          <PlusOutlined />\n          Add new manufucturer\n        </Space>\n      </Title>\n      <Spin size=\"large\" spinning={loading}>\n        <Form\n          style={{ width: \"60%\" }}\n          name=\"dynamic_form_item\"\n          layout=\"vertical\"\n          hideRequiredMark\n          onFinish={handleSubmit}\n        >\n          <TitleWithIcon title=\"Manufucturer\" icon={<InfoCircleOutlined />} />\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"name\"\n                label=\"Name\"\n                rules={[{ required: true, message: \"Please enter name\" }]}\n              >\n                <Input placeholder=\"Please enter name\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"address\"\n                label=\"Address\"\n                rules={[{ required: true, message: \"Please enter address\" }]}\n              >\n                <Input placeholder=\"Please enter address\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"website\"\n                label=\"Website\"\n                rules={[{ required: true, message: \"Please enter website\" }]}\n              >\n                <Input placeholder=\"Please enter website\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"description\"\n                label=\"Description\"\n                rules={[\n                  { required: true, message: \"Please enter description\" },\n                ]}\n              >\n                <Input.TextArea placeholder=\"Please enter description\" />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={16}>\n            <Col span={12}>\n              <Row style={{ marginBottom: 10 }}>\n                <Text style={{ color: colors.white }}>Contacts</Text>\n              </Row>\n              <Form.List name=\"contacts\">\n                {(fields, { add, remove }) => {\n                  return (\n                    <div>\n                      {fields.map((field, index) => (\n                        <Form.Item required={false} key={field.key}>\n                          <Form.Item\n                            {...field}\n                            validateTrigger={[\"onChange\", \"onBlur\"]}\n                            noStyle\n                          >\n                            <Input\n                              placeholder=\"Please enter contact\"\n                              style={{ width: \"100%\" }}\n                              suffix={\n                                <MinusCircleOutlined\n                                  style={{ marginLeft: 10 }}\n                                  onClick={() => {\n                                    remove(field.name);\n                                  }}\n                                />\n                              }\n                            />\n                          </Form.Item>\n                        </Form.Item>\n                      ))}\n                      <Form.Item>\n                        <Button\n                          type=\"dashed\"\n                          onClick={() => {\n                            add();\n                          }}\n                          style={{ width: \"100%\" }}\n                        >\n                          <PlusOutlined /> Add contact\n                        </Button>\n                      </Form.Item>\n                    </div>\n                  );\n                }}\n              </Form.List>\n            </Col>\n\n            <Col span={12}>\n              <Row style={{ marginBottom: 10 }}>\n                <Text style={{ color: colors.white }}>Email</Text>\n              </Row>\n              <Form.List name=\"email\">\n                {(fields, { add, remove }) => {\n                  return (\n                    <div>\n                      {fields.map((field, index) => (\n                        <Form.Item required={false} key={field.key}>\n                          <Form.Item\n                            {...field}\n                            validateTrigger={[\"onChange\", \"onBlur\"]}\n                            noStyle\n                          >\n                            <Input\n                              placeholder=\"Please enter email\"\n                              style={{ width: \"100%\" }}\n                              type=\"email\"\n                              suffix={\n                                <MinusCircleOutlined\n                                  style={{ marginLeft: 10 }}\n                                  onClick={() => {\n                                    remove(field.name);\n                                  }}\n                                />\n                              }\n                            />\n                          </Form.Item>\n                        </Form.Item>\n                      ))}\n                      <Form.Item>\n                        <Button\n                          type=\"dashed\"\n                          onClick={() => {\n                            add();\n                          }}\n                          style={{ width: \"100%\" }}\n                        >\n                          <PlusOutlined /> Add email\n                        </Button>\n                      </Form.Item>\n                    </div>\n                  );\n                }}\n              </Form.List>\n            </Col>\n          </Row>\n\n          <Row justify=\"end\">\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                style={{ marginTop: 50 }}\n                htmlType=\"submit\"\n                size=\"large\"\n              >\n                Save manufucturer\n              </Button>\n            </Form.Item>\n          </Row>\n        </Form>\n      </Spin>\n    </div>\n  );\n}\n\nexport default ManufucturerNew;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Descriptions,\n  Space,\n  Typography,\n  Row,\n  Button,\n  Form,\n  Input,\n  Popconfirm,\n  Spin,\n  message,\n} from \"antd\";\nimport {\n  ShopOutlined,\n  EditOutlined,\n  PlusOutlined,\n  MinusCircleOutlined,\n  InfoCircleOutlined,\n} from \"@ant-design/icons\";\nimport TitleWithIcon from \"../../components/admin/TitleWithIcon\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport ManufucturerService from \"../../services/manufucturerService\";\nimport logService from \"../../services/logService\";\nimport routes from \"../routes\";\n\nconst { Title, Text } = Typography;\n\nfunction ManufucturerDetail() {\n  const [edit, setEdit] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState();\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    setLoading(true);\n    try {\n      const { data } = await ManufucturerService.getManufucturer(id);\n      setData(data);\n      setLoading(false);\n    } catch (ex) {\n      logService.log(ex);\n    }\n  };\n\n  const handleSubmit = async (values) => {\n    setLoading(true);\n    try {\n      const result = await ManufucturerService.saveManufucturer(values, id);\n      if (result) {\n        setData(result.data);\n        setEdit(false);\n      }\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400)\n        message.error(ex.response.data);\n    }\n    setLoading(false);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await ManufucturerService.deleteManufucturer(id);\n      history.push(routes.ADMIN_MANUFUCTURERS);\n    } catch (ex) {\n      logService.log(ex);\n    }\n  };\n\n  return (\n    <div style={{ padding: 40 }}>\n      <Spin size=\"large\" spinning={loading}>\n        {data && (\n          <Form\n            name=\"dynamic_form_item\"\n            layout=\"vertical\"\n            hideRequiredMark\n            initialValues={{\n              name: data && data.name,\n              address: data && data.address,\n              description: data && data.description,\n              website: data && data.website,\n              contacts: data && data.contacts,\n              email: data && data.email,\n            }}\n            onFinish={handleSubmit}\n          >\n            <Row justify=\"space-between\">\n              <Title level={3} style={{ marginBottom: 30 }}>\n                <Space>\n                  <ShopOutlined />\n                  {data.name}\n                </Space>\n              </Title>\n              {edit ? (\n                <Row justify=\"end\">\n                  <Space>\n                    <Form.Item noStyle style={{ display: \"block\" }}>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Save changes\n                      </Button>\n                    </Form.Item>\n                    <Button onClick={() => setEdit(false)}>Cancel</Button>\n                  </Space>\n                </Row>\n              ) : (\n                <Button htmlType=\"button\" onClick={() => setEdit(true)}>\n                  <EditOutlined /> Edit manufucturer\n                </Button>\n              )}\n            </Row>\n            <TitleWithIcon\n              title=\"Manufucturer\"\n              icon={<InfoCircleOutlined />}\n              marginTop={0}\n            />\n            <Descriptions\n              layout=\"vertical\"\n              bordered\n              column={2}\n              style={{ width: \"60%\" }}\n            >\n              <Descriptions.Item label=\"Name\">\n                {edit ? (\n                  <Form.Item\n                    name=\"name\"\n                    rules={[{ required: true, message: \"Please enter name\" }]}\n                    noStyle\n                  >\n                    <Input />\n                  </Form.Item>\n                ) : (\n                  data.name\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Website\">\n                {edit ? (\n                  <Form.Item\n                    name=\"website\"\n                    rules={[\n                      { required: true, message: \"Please enter website\" },\n                    ]}\n                    noStyle\n                  >\n                    <Input />\n                  </Form.Item>\n                ) : (\n                  data.website\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Address\">\n                {edit ? (\n                  <Form.Item\n                    name=\"address\"\n                    rules={[\n                      { required: true, message: \"Please enter address\" },\n                    ]}\n                    noStyle\n                  >\n                    <Input.TextArea autoSize />\n                  </Form.Item>\n                ) : (\n                  data.address\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Description\">\n                {edit ? (\n                  <Form.Item\n                    name=\"description\"\n                    rules={[\n                      { required: true, message: \"Please enter description\" },\n                    ]}\n                    noStyle\n                  >\n                    <Input.TextArea autoSize />\n                  </Form.Item>\n                ) : (\n                  data.description\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Contacts\">\n                {edit ? (\n                  <Form.List name=\"contacts\">\n                    {(fields, { add, remove }) => {\n                      return (\n                        <div>\n                          {fields.map((field, index) => (\n                            <Form.Item required={false} key={field.key}>\n                              <Form.Item\n                                {...field}\n                                validateTrigger={[\"onChange\", \"onBlur\"]}\n                                noStyle\n                              >\n                                <Input\n                                  placeholder=\"Please enter contact\"\n                                  style={{ width: \"100%\" }}\n                                  suffix={\n                                    <MinusCircleOutlined\n                                      style={{ marginLeft: 10 }}\n                                      onClick={() => {\n                                        remove(field.name);\n                                      }}\n                                    />\n                                  }\n                                />\n                              </Form.Item>\n                            </Form.Item>\n                          ))}\n                          <Form.Item>\n                            <Button\n                              type=\"dashed\"\n                              onClick={() => {\n                                add();\n                              }}\n                              style={{ width: \"100%\" }}\n                            >\n                              <PlusOutlined /> Add contact\n                            </Button>\n                          </Form.Item>\n                        </div>\n                      );\n                    }}\n                  </Form.List>\n                ) : (\n                  data.contacts &&\n                  data.contacts.map((contact) => (\n                    <Text key={contact} style={{ display: \"block\" }}>\n                      {contact}\n                    </Text>\n                  ))\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Email\">\n                {edit ? (\n                  <Form.List name=\"email\">\n                    {(fields, { add, remove }) => {\n                      return (\n                        <div>\n                          {fields.map((field, index) => (\n                            <Form.Item required={false} key={field.key}>\n                              <Form.Item\n                                {...field}\n                                validateTrigger={[\"onChange\", \"onBlur\"]}\n                                noStyle\n                              >\n                                <Input\n                                  placeholder=\"Please enter email\"\n                                  style={{ width: \"100%\" }}\n                                  type=\"email\"\n                                  suffix={\n                                    <MinusCircleOutlined\n                                      style={{ marginLeft: 10 }}\n                                      onClick={() => {\n                                        remove(field.name);\n                                      }}\n                                    />\n                                  }\n                                />\n                              </Form.Item>\n                            </Form.Item>\n                          ))}\n                          <Form.Item>\n                            <Button\n                              type=\"dashed\"\n                              onClick={() => {\n                                add();\n                              }}\n                              style={{ width: \"100%\" }}\n                            >\n                              <PlusOutlined /> Add email\n                            </Button>\n                          </Form.Item>\n                        </div>\n                      );\n                    }}\n                  </Form.List>\n                ) : (\n                  data.email &&\n                  data.email.map((e) => (\n                    <Text key={e} style={{ display: \"block\" }}>\n                      {e}\n                    </Text>\n                  ))\n                )}\n              </Descriptions.Item>\n            </Descriptions>\n            {edit && (\n              <Row style={{ marginTop: 20, width: \"60%\" }} justify=\"end\">\n                <Popconfirm\n                  title=\"Are you sure delete this manufucturer?\"\n                  onConfirm={handleDelete}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Button danger>Delete</Button>\n                </Popconfirm>\n              </Row>\n            )}\n          </Form>\n        )}\n      </Spin>\n    </div>\n  );\n}\n\nexport default ManufucturerDetail;\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport SideBar from \"../../components/admin/SideBar\";\nimport HeadBar from \"../../components/admin/HeadBar\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport routes from \"../routes\";\nimport MachineNew from \"./MachineNew\";\nimport MachineList from \"./MachineList\";\nimport MachineDetail from \"./MachineDetail\";\nimport ManufucturerList from \"./ManufucturerList\";\nimport ManufucturerNew from \"./ManufucturerNew\";\nimport ManufucturerDetail from \"./ManufucturerDetail\";\n\nconst { Content } = Layout;\n\nfunction Administration() {\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      <SideBar />\n      <Layout className=\"site-layout\">\n        <HeadBar />\n        <Content>\n          <Switch>\n            <Route exact path={routes.ADMIN_MACHINES} component={MachineList} />\n            <Route\n              path={routes.ADMIN_MACHINE_DETAIL}\n              component={MachineDetail}\n            />\n            <Route path={routes.ADMIN_MACHINE_NEW} component={MachineNew} />\n            <Route\n              exact\n              path={routes.ADMIN_MANUFUCTURERS}\n              component={ManufucturerList}\n            />\n            <Route\n              path={routes.ADMIN_MANUFUCTURER_DETAIL}\n              component={ManufucturerDetail}\n            />\n            <Route\n              path={routes.ADMIN_MANUFUCTURER_NEW}\n              component={ManufucturerNew}\n            />\n            <Redirect exact from={routes.ADMIN} to={routes.ADMIN_MACHINES} />\n            <Redirect exact from=\"/\" to={routes.ADMIN_MACHINES} />\n          </Switch>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Administration;\n","import React from \"react\";\nimport loginBack from \"../../assets/loginBack.jpeg\";\nimport { Form, Input, Button, Checkbox, Typography, Row, message } from \"antd\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport colors from \"../../config/colors\";\nimport routes from \"../routes\";\nimport authService from \"../../services/authService\";\nimport { Redirect } from \"react-router-dom\";\n\nconst { Text } = Typography;\n\nconst onFinish = async (values) => {\n  try {\n    await authService.login(values.email, values.password);\n    window.location = routes.ADMIN_MACHINES;\n  } catch (ex) {\n    if (ex.response && ex.response.status === 400) {\n      message.error(ex.response.data);\n    }\n  }\n};\n\nfunction Login() {\n  if (authService.getCurrentUser())\n    return <Redirect to={routes.ADMIN_MACHINES} />;\n  return (\n    <Row\n      justify=\"center\"\n      style={{\n        backgroundImage: `url(${loginBack})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        width: \"100%\",\n        height: \"100vh\",\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: colors.dark,\n          width: 400,\n          position: \"relative\",\n          left: 200,\n          opacity: 0.9,\n          height: 500,\n          marginTop: 100,\n        }}\n      />\n      <div\n        style={{\n          width: 400,\n          height: 500,\n          marginTop: 100,\n          padding: 50,\n          position: \"relative\",\n          right: 200,\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <div style={{ textAlign: \"center\", marginBottom: 30 }}>\n          <Text style={{ color: colors.white, fontSize: \"1.4em\" }} level={4}>\n            Machinery\n          </Text>\n          <p>Administration</p>\n        </div>\n\n        <Form\n          name=\"normal_login\"\n          className=\"login-form\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name=\"email\"\n            rules={[{ required: true, message: \"Please input your email!\" }]}\n          >\n            <Input\n              prefix={<MailOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n              Log in\n            </Button>\n            Or <a href={routes.ADMIN_REGISTER}>register now!</a>\n          </Form.Item>\n        </Form>\n      </div>\n    </Row>\n  );\n}\n\nexport default Login;\n","import http from \"./httpService\";\n\nconst apiEndPoint = \"/users\";\n\nexport function register(user) {\n  const data = {\n    email: user.email,\n    password: user.password,\n    name: user.name,\n  };\n  return http.post(apiEndPoint, data);\n}\n\nexport function getUserDetail() {\n  return http.get(apiEndPoint + \"/me\");\n}\n\nexport default { register, getUserDetail };\n","import React from \"react\";\nimport registerBack from \"../../assets/registerBack.jpeg\";\nimport { Form, Input, Button, Typography, Row, message } from \"antd\";\nimport { UserOutlined, MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport colors from \"../../config/colors\";\nimport routes from \"../routes\";\nimport userService from \"../../services/userService\";\nimport authService from \"../../services/authService\";\nimport { Redirect } from \"react-router-dom\";\n\nconst { Text } = Typography;\n\nconst onFinish = async (values) => {\n  try {\n    const response = await userService.register(values);\n    authService.loginWithJwt(response.data);\n    window.location = routes.ADMIN_MACHINES;\n  } catch (ex) {\n    if (ex.response && ex.response.status === 400)\n      message.error(ex.response.data);\n  }\n};\n\nfunction Register() {\n  if (authService.getCurrentUser())\n    return <Redirect to={routes.ADMIN_MACHINES} />;\n  return (\n    <Row\n      justify=\"center\"\n      style={{\n        backgroundImage: `url(${registerBack})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        width: \"100%\",\n        height: \"100vh\",\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: colors.dark,\n          width: 400,\n          position: \"relative\",\n          left: 200,\n          opacity: 0.9,\n          height: 550,\n          marginTop: 100,\n        }}\n      />\n      <div\n        style={{\n          width: 400,\n          height: 550,\n          marginTop: 100,\n          padding: 50,\n          position: \"relative\",\n          right: 200,\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <div style={{ textAlign: \"center\", marginBottom: 30 }}>\n          <Text style={{ color: colors.white, fontSize: \"1.4em\" }} level={4}>\n            Machinery\n          </Text>\n          <p>Administration</p>\n        </div>\n\n        <Form\n          name=\"normal_login\"\n          className=\"login-form\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name=\"email\"\n            rules={[{ required: true, message: \"Please input your email!\" }]}\n          >\n            <Input\n              prefix={<MailOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"name\"\n            rules={[{ required: true, message: \"Please input user name!\" }]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"User name\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"confirm\"\n            dependencies={[\"password\"]}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: \"Please confirm your password!\",\n              },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    \"The two passwords that you entered do not match!\"\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input.Password\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"Password confirm\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n              Register\n            </Button>\n            Or <a href={routes.ADMIN_LOGIN}>login now!</a>\n          </Form.Item>\n        </Form>\n      </div>\n    </Row>\n  );\n}\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport \"./App.less\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Administration from \"./routes/admin/Administration\";\nimport routes from \"./routes/routes\";\nimport Login from \"./routes/admin/Login\";\nimport Register from \"./routes/admin/Register\";\nimport authService from \"./services/authService\";\nimport UserContext from \"./context/UserContext\";\n\nfunction App() {\n  const [auth] = useState(authService.getCurrentUser());\n\n  return (\n    <UserContext.Provider value={{ user: auth }}>\n      <Switch>\n        <Route path={routes.ADMIN_LOGIN} component={Login} />\n        <Route path={routes.ADMIN_REGISTER} component={Register} />\n        {auth && (\n          <>\n            <Route path={routes.ADMIN} component={Administration} />\n          </>\n        )}\n        <Redirect to={routes.ADMIN_LOGIN} />\n      </Switch>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}